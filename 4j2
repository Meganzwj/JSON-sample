CALL apoc.load.json("YOUR_URL") YIELD value

// Load people
UNWIND value.people AS p
MERGE (person:Person {SIN: p.SIN})
SET person.name = p.Name,
    person.dob = date(p.DOB),
    person.address = p.Address;

// Load businesses
UNWIND value.businesses AS b
MERGE (biz:Business {BN: b.BN})
SET biz.legalName = b.LegalName,
    biz.incorporationDate = date(b.IncorporationDate),
    biz.address = b.Address,
    biz.name = b.BN;  // Show BN as label

// Load ALL program accounts and connect to business (including RP, RC)
UNWIND value.businesses AS b
UNWIND b.ProgramAccounts AS acc
MERGE (acct:ProgramAccount {AccountNumber: acc.AccountNumber})
SET acct.program = acc.Program,
    acct.status = acc.Status,
    acct.registeredDate = date(acc.RegisteredDate),
    acct.name = acc.AccountNumber
WITH b, acc
MATCH (biz:Business {BN: b.BN})
MERGE (biz)-[:HAS_ACCOUNT]->(acct);

// Load tax returns only for RC accounts that have TaxReturns
UNWIND value.businesses AS b
UNWIND b.ProgramAccounts AS acc
WITH acc WHERE acc.TaxReturns IS NOT NULL
UNWIND acc.TaxReturns AS r
MERGE (acct:ProgramAccount {AccountNumber: acc.AccountNumber})
MERGE (ret:TaxReturn {AccountNumber: acc.AccountNumber, taxYear: r.TaxYear})
SET ret.name = toString(r.TaxYear),
    ret.line_101 = r.Lines["101"],
    ret.line_300 = r.Lines["300"],
    ret.line_360 = r.Lines["360"],
    ret.line_700 = r.Lines["700"]
MERGE (acct)-[:FILED]->(ret);

// Load assessments per tax return
UNWIND value.businesses AS b
UNWIND b.ProgramAccounts AS acc
WITH acc WHERE acc.TaxReturns IS NOT NULL
UNWIND acc.TaxReturns AS r
UNWIND r.Assessments AS a
WITH acc, r, a,
     CASE WHEN a.Type = "Initial" THEN "Initial"
          ELSE "Reassessment " + toString(a.Round)
     END AS label
MERGE (ret:TaxReturn {AccountNumber: acc.AccountNumber, taxYear: r.TaxYear})
MERGE (assess:Assessment {
  taxYear: r.TaxYear,
  type: label,
  AccountNumber: acc.AccountNumber
})
SET assess.name = label,
    assess.date = date(a.AssessmentDate),
    assess.balanceDue = a.BalanceDue,
    assess.noticeIssued = a.NoticeIssued
MERGE (ret)-[:HAS_ASSESSMENT]->(assess);

// Load ownership
UNWIND value.ownership AS own
MATCH (p:Person {SIN: own.SIN})
MATCH (b:Business {BN: own.BN})
MERGE (p)-[:OWNS {role: own.Role, since: date(own.Since)}]->(b);
